<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="learndb-suite.xml" />
	<munit:test name="learndbFlow-success" doc:id="fb7e3f39-30ec-44b0-a31e-51bc9839cf78" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="8bc17769-556a-4126-b880-908c38e9ac77" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0e6d8a6-1546-4cf8-8ce9-9c3d40dbb8b9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://learndbFlowsuccess\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="27114ff0-7220-4f63-a8fe-67e437902f2e" >
				<munit:payload value="#[readUrl('classpath://learndbFlowsuccess\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://learndbFlowsuccess\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to learndbFlow" doc:id="33a0baa5-6398-442c-bcd4-36d53de6637a" name="learndbFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f0e9c97b-42be-4db2-8395-d0e266fd2695" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import learndbFlowsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
